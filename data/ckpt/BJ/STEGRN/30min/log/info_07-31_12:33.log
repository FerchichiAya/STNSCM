2024-07-31 12:33:53,917 - __main__ - INFO - Log directory: data/ckpt/BJ/STEGRN/30min/log
2024-07-31 12:33:53,932 - __main__ - INFO - {'expid': 1, 'runs': 2, 'dataset_name': 'all_data_r1_d1_w1_30min.npz', 'device': 'cuda:0', 'log_level': 'INFO', 'base_path': 'data/train_data/BJ', 'save': 'data/ckpt/BJ', 'model_name': 'STEGRN', 'data': {'cluster_num': 64, 'freq': '30min', 'name': 'bj_bike', 'num_for_predict': 6, 'num_for_target': 2, 'num_of_days': 1, 'num_of_hours': 1, 'num_of_weeks': 1, 'num_shift': 2, 'points_per_hour': 2, 'test_batch_size': 64, 'train_batch_size': 64, 'val_batch_size': 64}, 'model': {'adj': 'affinity', 'alpha': 1, 'dropout_prob': 0.0, 'dropout_type': 'zoneout', 'dyn_norm': 'D-1', 'fusion_mode': 'split', 'gcn_depth': 2, 'graph_type': 'geo_od_dyn', 'hidden_dim': 64, 'input_dim': 2, 'loss_type': 'Smooth', 'num_of_head': 1, 'output_dim': 2, 'time_dim': 59, 'use_transform': True}, 'preprocess': {'OD_affinity_file': 'OD_affinity.npy', 'datasets_file': 'all_data', 'geo_affinity_file': 'geo_affinity.npy', 'nyc_holidays': ['2021-05-01', '2021-05-02', '2021-05-03', '2021-05-04', '2021-06-03', '2021-06-04', '2021-06-05']}, 'train': {'base_lr': 0.001, 'best_mode': 'data/ckpt/BJ/BJ-model.pth', 'test_only': True, 'cl_decay_steps': 1000, 'epoch_start': 0, 'epochs': 200, 'global_step': 0, 'load_initial': False, 'lr_decay_ratio': 0.2, 'max_grad_norm': 5, 'milestones': [60, 120, 180, 200], 'min_learning_rate': 2e-06, 'new_training': True, 'print_every': 1, 'tolerance': 100, 'use_curriculum_learning': True, 'weight_decay': 0.0001}}
2024-07-31 12:33:53,933 - __main__ - INFO - data/train_data/BJ/all_data_r1_d1_w1_30min.npz
2024-07-31 12:33:53,933 - __main__ - INFO - data/ckpt/BJ/STEGRN/30min/log
2024-07-31 12:33:54,497 - __main__ - INFO - ('train x', (4362, 64, 18, 2))
2024-07-31 12:33:54,498 - __main__ - INFO - ('train target', (4362, 64, 2, 2))
2024-07-31 12:33:54,498 - __main__ - INFO - ('train x time', (4362, 18, 6))
2024-07-31 12:33:54,498 - __main__ - INFO - ('train target time', (4362, 2, 6))
2024-07-31 12:33:54,498 - __main__ - INFO - ('train pos', (4362, 4))
2024-07-31 12:33:54,499 - __main__ - INFO - 

2024-07-31 12:33:54,499 - __main__ - INFO - ('val x', (545, 64, 18, 2))
2024-07-31 12:33:54,499 - __main__ - INFO - ('val target', (545, 64, 2, 2))
2024-07-31 12:33:54,499 - __main__ - INFO - ('val x time', (545, 18, 6))
2024-07-31 12:33:54,500 - __main__ - INFO - ('val target time', (545, 2, 6))
2024-07-31 12:33:54,500 - __main__ - INFO - ('val pos', (545, 4))
2024-07-31 12:33:54,500 - __main__ - INFO - 

2024-07-31 12:33:54,501 - __main__ - INFO - ('test x', (545, 64, 18, 2))
2024-07-31 12:33:54,501 - __main__ - INFO - ('test target', (545, 64, 2, 2))
2024-07-31 12:33:54,501 - __main__ - INFO - ('test x time', (545, 18, 6))
2024-07-31 12:33:54,501 - __main__ - INFO - ('test target time', (545, 2, 6))
2024-07-31 12:33:54,502 - __main__ - INFO - ('test pos', (545, 4))
2024-07-31 12:33:54,502 - __main__ - INFO - 

2024-07-31 12:33:54,502 - __main__ - INFO - scaler.mean : 90.54989856764863, scaler.std : 143.57267603277353
2024-07-31 12:33:54,502 - __main__ - INFO - 

2024-07-31 12:33:54,503 - __main__ - INFO - time feature index : {'time': (0, 3), 'weather_numerical': (3, 6)}
2024-07-31 12:33:54,504 - __main__ - INFO - time weather data : [[Timestamp('2021-05-01 00:00:00') 5 0 ... -0.13878310472443348
  -3.3157922872053995 -0.7646244036924886]
 [Timestamp('2021-05-01 00:30:00') 5 1 ... -0.13878310472443348
  -3.41756948903783 -0.7646244036924886]
 [Timestamp('2021-05-01 01:00:00') 5 2 ... -0.13878310472443348
  -3.5193466908702606 -0.35891374678582444]
 ...
 [Timestamp('2021-08-31 22:30:00') 1 45 ... -0.13878310472443348
  -0.3133648331486997 -1.9817563744124813]
 [Timestamp('2021-08-31 23:00:00') 1 46 ... -0.13878310472443348
  -0.7713622413946369 -1.9817563744124813]
 [Timestamp('2021-08-31 23:30:00') 1 47 ... -0.13878310472443348
  -0.8222508423108522 -1.9817563744124813]]
2024-07-31 12:33:54,521 - __main__ - INFO - STEGRN
2024-07-31 12:33:55,899 - __main__ - INFO - loading data/ckpt/BJ/BJ-model.pth
2024-07-31 12:33:55,929 - __main__ - INFO - model load success! data/ckpt/BJ/BJ-model.pth
2024-07-31 12:33:55,929 - __main__ - INFO - Net's state_dict:
2024-07-31 12:33:55,931 - __main__ - INFO - encoder.RNNCell.0.week_x_FC.weight	torch.Size([64, 2])
2024-07-31 12:33:55,934 - __main__ - INFO - encoder.RNNCell.0.week_x_FC.bias	torch.Size([64])
2024-07-31 12:33:55,936 - __main__ - INFO - encoder.RNNCell.0.week_time_FC.weight	torch.Size([64, 59])
2024-07-31 12:33:55,938 - __main__ - INFO - encoder.RNNCell.0.week_time_FC.bias	torch.Size([64])
2024-07-31 12:33:55,940 - __main__ - INFO - encoder.RNNCell.0.week_FC.weight	torch.Size([64, 128])
2024-07-31 12:33:55,942 - __main__ - INFO - encoder.RNNCell.0.week_FC.bias	torch.Size([64])
2024-07-31 12:33:55,944 - __main__ - INFO - encoder.RNNCell.0.day_x_FC.weight	torch.Size([64, 2])
2024-07-31 12:33:55,946 - __main__ - INFO - encoder.RNNCell.0.day_x_FC.bias	torch.Size([64])
2024-07-31 12:33:55,948 - __main__ - INFO - encoder.RNNCell.0.day_time_FC.weight	torch.Size([64, 59])
2024-07-31 12:33:55,950 - __main__ - INFO - encoder.RNNCell.0.day_time_FC.bias	torch.Size([64])
2024-07-31 12:33:55,952 - __main__ - INFO - encoder.RNNCell.0.day_FC.weight	torch.Size([64, 128])
2024-07-31 12:33:55,954 - __main__ - INFO - encoder.RNNCell.0.day_FC.bias	torch.Size([64])
2024-07-31 12:33:55,956 - __main__ - INFO - encoder.RNNCell.0.hour_x_FC.weight	torch.Size([64, 2])
2024-07-31 12:33:55,958 - __main__ - INFO - encoder.RNNCell.0.hour_x_FC.bias	torch.Size([64])
2024-07-31 12:33:55,960 - __main__ - INFO - encoder.RNNCell.0.hour_time_FC.weight	torch.Size([64, 59])
2024-07-31 12:33:55,962 - __main__ - INFO - encoder.RNNCell.0.hour_time_FC.bias	torch.Size([64])
2024-07-31 12:33:55,963 - __main__ - INFO - encoder.RNNCell.0.hour_FC.weight	torch.Size([64, 128])
2024-07-31 12:33:55,966 - __main__ - INFO - encoder.RNNCell.0.hour_FC.bias	torch.Size([64])
2024-07-31 12:33:55,967 - __main__ - INFO - encoder.RNNCell.0.fusion_x_time2.weight	torch.Size([64, 192])
2024-07-31 12:33:55,969 - __main__ - INFO - encoder.RNNCell.0.fusion_x_time2.bias	torch.Size([64])
2024-07-31 12:33:55,971 - __main__ - INFO - encoder.RNNCell.0.gate_FC2.weight	torch.Size([64, 64])
2024-07-31 12:33:55,973 - __main__ - INFO - encoder.RNNCell.0.gate_FC2.bias	torch.Size([64])
2024-07-31 12:33:55,975 - __main__ - INFO - encoder.RNNCell.0.info_FC2.weight	torch.Size([64, 64])
2024-07-31 12:33:55,977 - __main__ - INFO - encoder.RNNCell.0.info_FC2.bias	torch.Size([64])
2024-07-31 12:33:55,979 - __main__ - INFO - encoder.RNNCell.0.dynGraph.start_FC.weight	torch.Size([64, 128])
2024-07-31 12:33:55,981 - __main__ - INFO - encoder.RNNCell.0.dynGraph.start_FC.bias	torch.Size([64])
2024-07-31 12:33:55,983 - __main__ - INFO - encoder.RNNCell.0.dynGraph.fc.0.weight	torch.Size([4, 64])
2024-07-31 12:33:55,985 - __main__ - INFO - encoder.RNNCell.0.dynGraph.fc.2.weight	torch.Size([64, 4])
2024-07-31 12:33:55,987 - __main__ - INFO - encoder.RNNCell.0.GCN_update1.weight	torch.Size([4])
2024-07-31 12:33:55,989 - __main__ - INFO - encoder.RNNCell.0.GCN_update1.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:55,991 - __main__ - INFO - encoder.RNNCell.0.GCN_update1.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:55,993 - __main__ - INFO - encoder.RNNCell.0.GCN_update2.weight	torch.Size([4])
2024-07-31 12:33:55,995 - __main__ - INFO - encoder.RNNCell.0.GCN_update2.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:55,997 - __main__ - INFO - encoder.RNNCell.0.GCN_update2.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:55,999 - __main__ - INFO - encoder.RNNCell.0.GCN_reset1.weight	torch.Size([4])
2024-07-31 12:33:56,001 - __main__ - INFO - encoder.RNNCell.0.GCN_reset1.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,003 - __main__ - INFO - encoder.RNNCell.0.GCN_reset1.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,005 - __main__ - INFO - encoder.RNNCell.0.GCN_reset2.weight	torch.Size([4])
2024-07-31 12:33:56,007 - __main__ - INFO - encoder.RNNCell.0.GCN_reset2.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,009 - __main__ - INFO - encoder.RNNCell.0.GCN_reset2.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,011 - __main__ - INFO - encoder.RNNCell.0.GCN_cell1.weight	torch.Size([4])
2024-07-31 12:33:56,013 - __main__ - INFO - encoder.RNNCell.0.GCN_cell1.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,015 - __main__ - INFO - encoder.RNNCell.0.GCN_cell1.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,017 - __main__ - INFO - encoder.RNNCell.0.GCN_cell2.weight	torch.Size([4])
2024-07-31 12:33:56,019 - __main__ - INFO - encoder.RNNCell.0.GCN_cell2.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,021 - __main__ - INFO - encoder.RNNCell.0.GCN_cell2.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,023 - __main__ - INFO - encoder.RNNCell.0.layerNorm.weight	torch.Size([64])
2024-07-31 12:33:56,025 - __main__ - INFO - encoder.RNNCell.0.layerNorm.bias	torch.Size([64])
2024-07-31 12:33:56,027 - __main__ - INFO - decoder.RNNCell.0.input_FC.weight	torch.Size([64, 61])
2024-07-31 12:33:56,029 - __main__ - INFO - decoder.RNNCell.0.input_FC.bias	torch.Size([64])
2024-07-31 12:33:56,031 - __main__ - INFO - decoder.RNNCell.0.fusion_x_time.weight	torch.Size([64, 64])
2024-07-31 12:33:56,033 - __main__ - INFO - decoder.RNNCell.0.fusion_x_time.bias	torch.Size([64])
2024-07-31 12:33:56,035 - __main__ - INFO - decoder.RNNCell.0.gate_FC1.weight	torch.Size([64, 64])
2024-07-31 12:33:56,037 - __main__ - INFO - decoder.RNNCell.0.gate_FC1.bias	torch.Size([64])
2024-07-31 12:33:56,039 - __main__ - INFO - decoder.RNNCell.0.info_FC1.weight	torch.Size([64, 64])
2024-07-31 12:33:56,042 - __main__ - INFO - decoder.RNNCell.0.info_FC1.bias	torch.Size([64])
2024-07-31 12:33:56,044 - __main__ - INFO - decoder.RNNCell.0.dynGraph.start_FC.weight	torch.Size([64, 128])
2024-07-31 12:33:56,046 - __main__ - INFO - decoder.RNNCell.0.dynGraph.start_FC.bias	torch.Size([64])
2024-07-31 12:33:56,048 - __main__ - INFO - decoder.RNNCell.0.dynGraph.fc.0.weight	torch.Size([4, 64])
2024-07-31 12:33:56,050 - __main__ - INFO - decoder.RNNCell.0.dynGraph.fc.2.weight	torch.Size([64, 4])
2024-07-31 12:33:56,052 - __main__ - INFO - decoder.RNNCell.0.GCN_update1.weight	torch.Size([4])
2024-07-31 12:33:56,054 - __main__ - INFO - decoder.RNNCell.0.GCN_update1.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,056 - __main__ - INFO - decoder.RNNCell.0.GCN_update1.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,058 - __main__ - INFO - decoder.RNNCell.0.GCN_update2.weight	torch.Size([4])
2024-07-31 12:33:56,060 - __main__ - INFO - decoder.RNNCell.0.GCN_update2.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,062 - __main__ - INFO - decoder.RNNCell.0.GCN_update2.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,065 - __main__ - INFO - decoder.RNNCell.0.GCN_reset1.weight	torch.Size([4])
2024-07-31 12:33:56,067 - __main__ - INFO - decoder.RNNCell.0.GCN_reset1.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,069 - __main__ - INFO - decoder.RNNCell.0.GCN_reset1.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,072 - __main__ - INFO - decoder.RNNCell.0.GCN_reset2.weight	torch.Size([4])
2024-07-31 12:33:56,077 - __main__ - INFO - decoder.RNNCell.0.GCN_reset2.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,081 - __main__ - INFO - decoder.RNNCell.0.GCN_reset2.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,083 - __main__ - INFO - decoder.RNNCell.0.GCN_cell1.weight	torch.Size([4])
2024-07-31 12:33:56,085 - __main__ - INFO - decoder.RNNCell.0.GCN_cell1.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,087 - __main__ - INFO - decoder.RNNCell.0.GCN_cell1.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,089 - __main__ - INFO - decoder.RNNCell.0.GCN_cell2.weight	torch.Size([4])
2024-07-31 12:33:56,092 - __main__ - INFO - decoder.RNNCell.0.GCN_cell2.mlp.mlp.weight	torch.Size([64, 384])
2024-07-31 12:33:56,094 - __main__ - INFO - decoder.RNNCell.0.GCN_cell2.mlp.mlp.bias	torch.Size([64])
2024-07-31 12:33:56,096 - __main__ - INFO - decoder.RNNCell.0.layerNorm.weight	torch.Size([64])
2024-07-31 12:33:56,098 - __main__ - INFO - decoder.RNNCell.0.layerNorm.bias	torch.Size([64])
2024-07-31 12:33:56,100 - __main__ - INFO - decoder.fc_final.weight	torch.Size([2, 64])
2024-07-31 12:33:56,102 - __main__ - INFO - decoder.fc_final.bias	torch.Size([2])
2024-07-31 12:33:56,105 - __main__ - INFO - transform.FC_q.weight	torch.Size([64, 59])
2024-07-31 12:33:56,107 - __main__ - INFO - transform.FC_q.bias	torch.Size([64])
2024-07-31 12:33:56,109 - __main__ - INFO - transform.FC_k.weight	torch.Size([64, 177])
2024-07-31 12:33:56,111 - __main__ - INFO - transform.FC_k.bias	torch.Size([64])
2024-07-31 12:33:56,113 - __main__ - INFO - transform.FC_v.weight	torch.Size([64, 64])
2024-07-31 12:33:56,115 - __main__ - INFO - transform.FC_v.bias	torch.Size([64])
2024-07-31 12:33:56,117 - __main__ - INFO - transform.FC.weight	torch.Size([64, 128])
2024-07-31 12:33:56,119 - __main__ - INFO - transform.FC.bias	torch.Size([64])
2024-07-31 12:33:56,120 - __main__ - INFO - Net's total params:415282
2024-07-31 12:33:56,121 - __main__ - INFO - Optimizer's state_dict:
2024-07-31 12:33:56,121 - __main__ - INFO - state	{}
2024-07-31 12:33:56,122 - __main__ - INFO - param_groups	[{'lr': 0.001, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0.0001, 'amsgrad': False, 'maximize': False, 'foreach': None, 'capturable': False, 'differentiable': False, 'fused': None, 'initial_lr': 0.001, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89]}]
2024-07-31 12:33:56,124 - __main__ - INFO - Number of model parameters is 415282
2024-07-31 12:33:56,124 - __main__ - INFO - Start testing phase.....
